1.1)
#include "pico/stdlib.h"

int main() {
  //
  const unit LED_PIN = 5;
  gpio_init(LED_PIN);
  gpio_set_dir(LED_PIN, GPIO_OUT);

  //
  while (true) {
    //
    gpio_put(LED_PIN, 1);
    sleep ms(50);
    gpio_put(LED_PIN, 0);
    sleep_ms(50);
  }
}


1.2)
boolean buttonWasUp = true;
boolean ledEnabled = false;

void setup() {
  pinMode(10, OUTPUT);
  pinMode(2, INPUT_PULLUP);
}
 
void loop() {
   // узнаем, отпущена ли кнопка сейчас
   boolean buttonIsUp = digitalRead(2);
 
   // если кнопка была отпущена и не отпущена сейчас
   if (buttonWasUp && !buttonIsUp) {

      // исключаем дребезг контактов тактовой кнопки
      delay(10);

    // и считываем сигнал с кнопки снова
    buttonIsUp = digitalRead(2);

      // если кнопка нажата, то переворачиваем сигнал светодиода
      if (!buttonIsUp) {
         ledEnabled = !ledEnabled;
         digitalWrite(10, ledEnabled);
      }
   }
 
   // запоминаем состояние кнопки для новой итерации
   buttonWasUp = buttonIsUp;
}



1.3)
int led_red = 2;
int led_yellow = 3;
int led_green = 4;
boolean ledOn = HIGH;
void setup()
{
  pinMode(led_red, OUTPUT);
  pinMode(led_yellow, OUTPUT);
  pinMode(led_green, OUTPUT);
}
void loop()
{
  digitalWrite(led_red, HIGH);
  delay(2000); // Wait for 10000 millisecond(s)
  digitalWrite(led_yellow, HIGH);
  delay(700);
  digitalWrite(led_red, LOW);
  digitalWrite(led_yellow, LOW);
  digitalWrite(led_green, HIGH);
  delay(2000); // Wait for 1000 millisecond(s)
  for (int i = 0; i<6; i++)
  {
    ledOn = !ledOn;
    digitalWrite(led_green, ledOn);
    delay(500);
  }
  digitalWrite(led_green, LOW);
  digitalWrite(led_yellow, HIGH);
  delay(700);
  digitalWrite(led_yellow, LOW);
}

ILI

const int LED_RED = 13;             // Порт 13, красный светодиод
const int LED_YELLOW = 12;             // Порт 12, желтый светодиод
const int LED_GREEN = 11;             // Порт 11, зеленый светодиод

const int TIMEOUT_RED = 3000;          // Время горения красного сетодиода
const int TIMEOUT_YEL = 1690;          // Время горения желтого светодиода
const int TIMEOUT_GREEN = 2000;        // Время горения зеленого светодиода

const int TIMEOUT_FLASH_GREEN = 500;      // Время мигания зеленого светодиода

void setup()
{
  // Все порты светодиодов будут у нас установлены в режим "внешняя нагрузка", OUTPUT
  pinMode(LED_RED, OUTPUT);   
  pinMode(LED_YELLOW, OUTPUT);
  pinMode(LED_GREEN, OUTPUT);
  
  // Устанавливаем начальное значение светодиодов
  digitalWrite(LED_RED, LOW);
  digitalWrite(LED_YELLOW, LOW);
  digitalWrite(LED_GREEN, LOW);
}  

void loop()
{
  // Включаем зеленый цвет светофора
  digitalWrite(LED_GREEN, HIGH);    // Включаем светодиод       
  delay(TIMEOUT_GREEN);             // Ждем

  // Мигаем зеленым светодиодом 3 раза
  for (int i=0; i<3; i++)
    {
      digitalWrite(LED_GREEN, LOW);         
      delay(TIMEOUT_FLASH_GREEN);                
      digitalWrite(LED_GREEN, HIGH);        
      delay(TIMEOUT_FLASH_GREEN);                
    }  
  
  // Теперь отключаем зеленый и включаем желтый светодиод
  digitalWrite(LED_GREEN, LOW); 
  digitalWrite(LED_YELLOW, HIGH);           
  delay(TIMEOUT_YEL);            

  // Отключаем желтый светодиод.
  digitalWrite(LED_YELLOW, LOW); 
  // Теперь включаем красный цвет
  digitalWrite(LED_RED, HIGH);            
  delay(TIMEOUT_RED);                         
          
  // Включаем желтый светодиод,не выключая красный
  digitalWrite(LED_YELLOW, HIGH);           
  delay(TIMEOUT_YEL);                       
  
  // Отключаем желтый и красный светодиоды.
  digitalWrite(LED_YELLOW, LOW);    
  digitalWrite(LED_RED, LOW);   
  
}
